# .env.sample をコピーして .env にリネームして使用

### ■ ローカル開発用
## ----- BACKEND ----- ##
# DATABASE_URL="postgresql://postgres:password@localhost:5432/tripia?schema=public"  # ローカルで直接 npm run dev する場合
DATABASE_URL="postgresql://postgres:password@db:5432/tripia?schema=public"  # dockerの場合：docker-compose.ymlのDBサービス名を指定


## ----- DB ----- ##
POSTGRES_USER="postgres"
POSTGRES_PASSWORD="password"
POSTGRES_DB="tripia"
POSTGRES_INITDB_ARGS="--encoding=UTF-8 --locale=C"


## ---- FRONTEND ---- ##
FRONTEND_URL="http://localhost:3000"


## ---- AWS ---- ##
AWS_ACCESS_KEY="アクセスキーを記述"
AWS_SECRET_ACCESS_KEY="シークレットアクセスキーを記述"
AWS_REGION="リージョン名を記述"
S3_BUCKET_NAME="S3バケット名を記述"

## ---- OTHER ---- ##
# NODE_ENV="production"



### ■ 本番用
# ※AWSにデプロイする場合は.envを使わないため、以下情報を参考にAWSの各マネージドに環境変数を登録して使用する

## ----- BACKEND ----- ## （AWS ECSタスクの環境変数に指定）
# DATABASE_URL="postgresql://postgres:pass@RDSのエンドポイント:5432/tripia?schema=public" # RDSのエンドポイントを指定


## ----- DB ----- ## （以下情報に沿ってAWS RDSを構築）
# POSTGRES_USER="postgres"
# POSTGRES_PASSWORD="pass"
# POSTGRES_DB="tripia"
# POSTGRES_INITDB_ARGS="--encoding=UTF-8 --locale=C"


## ---- FRONTEND ---- ## （AWS ECSタスクの環境変数に指定）
# FRONTEND_URL="http://フロントエンド用のALBのDNS名を記述"


## ---- AWS ---- ## （AWS ECSタスクの環境変数に指定）
# AWS_ACCESS_KEY="アクセスキーを記述"
# AWS_SECRET_ACCESS_KEY="シークレットアクセスキーを記述"
# AWS_REGION="リージョン名を記述"
# S3_BUCKET_NAME="S3バケット名を記述"

## ---- OTHER ---- ##
# NODE_ENV="production"